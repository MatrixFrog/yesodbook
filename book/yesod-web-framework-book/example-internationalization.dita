<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="example-internationalization"><title id="x-1">Example: Internationalization</title><conbody id="x-2"><codeblock id="x1" outputclass="lhaskell">&gt; {-# LANGUAGE QuasiQuotes #-}
&gt; {-# LANGUAGE TemplateHaskell #-}
&gt; {-# LANGUAGE TypeFamilies #-}
&gt; {-# LANGUAGE MultiParamTypeClasses #-}
&gt; {-# LANGUAGE OverloadedStrings #-}

&gt; import Yesod
&gt; import Data.Monoid (mempty)
&gt; import Data.Text (Text)

&gt; data I18N = I18N

&gt; mkYesod "I18N" [parseRoutes|
&gt; /            HomepageR GET
&gt; /set/#Text SetLangR  GET
&gt; |]

&gt; instance Yesod I18N where
&gt;     approot _ = "http://localhost:3000"

&gt; getHomepageR :: Handler RepHtml
&gt; getHomepageR = do
&gt;     ls &lt;- languages
&gt;     let hello = chooseHello ls
&gt;     let choices =
&gt;             [ ("en", "English") :: (Text, Text)
&gt;             , ("es", "Spanish")
&gt;             , ("he", "Hebrew")
&gt;             ]
&gt;     defaultLayout $ do
&gt;       setTitle "I18N Homepage"
&gt;       addHamlet [hamlet|
&gt; &lt;h1&gt;#{hello}
&gt; &lt;p&gt;In other languages:
&gt; &lt;ul&gt;
&gt;     $forall choice &lt;- choices
&gt;         &lt;li&gt;
&gt;             &lt;a href="@{SetLangR (fst choice)}"&gt;#{snd choice}
&gt; |]

&gt; chooseHello :: [Text] -&gt; Text
&gt; chooseHello [] = "Hello"
&gt; chooseHello ("he":_) = "Shalom"
&gt; chooseHello ("es":_) = "Hola"
&gt; chooseHello (_:rest) = chooseHello rest

&gt; getSetLangR :: Text -&gt; Handler ()
&gt; getSetLangR lang = do
&gt;     setLanguage lang
&gt;     redirect RedirectTemporary HomepageR

&gt; main :: IO ()
&gt; main = warpDebug 3000 I18N
</codeblock></conbody></concept>
