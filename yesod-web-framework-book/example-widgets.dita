<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="example-widgets"><title id="x-1">Example: Widgets</title><conbody id="x-2"><codeblock id="x1" outputclass="lhaskell">&gt; {-# LANGUAGE TypeFamilies, QuasiQuotes, OverloadedStrings, MultiParamTypeClasses, TemplateHaskell #-}
&gt; import Yesod
&gt; import Yesod.Helpers.Static
&gt; import Yesod.Form.Jquery
&gt; import Yesod.Form.Nic
&gt; import Control.Applicative
&gt; import Data.Text (unpack)
&gt; 
&gt; data HW = HW { hwStatic :: Static }
&gt; type Handler = GHandler HW HW
&gt; mkYesod "HW" [parseRoutes|
&gt; / RootR GET
&gt; /form FormR
&gt; /static StaticR Static hwStatic
&gt; /autocomplete AutoCompleteR GET
&gt; |]
&gt; instance Yesod HW where approot _ = ""
&gt; instance YesodJquery HW
&gt; instance YesodNic HW
&gt; wrapper h = [hamlet|
&gt; &lt;#wrapper&gt;^{h}
&gt; &lt;footer&gt;Brought to you by Yesod Widgets&amp;trade;
&gt; |]
&gt; getRootR = defaultLayout $ wrapper $ do
&gt;     i &lt;- lift newIdent
&gt;     setTitle $ string "Hello Widgets"
&gt;     addCassius [cassius|
&gt;   #$i$
&gt;       color: red|]
&gt;     addStylesheet $ StaticR $ StaticRoute ["style.css"] []
&gt;     addStylesheetRemote "http://localhost:3000/static/style2.css"
&gt;     addScriptRemote "http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"
&gt;     addScript $ StaticR $ StaticRoute ["script.js"] []
&gt;     addHamlet [hamlet|
&gt; &lt;h1 ##{i}&gt;Welcome to my first widget!!!
&gt; &lt;p
&gt;     &lt;a href=@RootR@&gt;Recursive link.
&gt; &lt;p
&gt;     &lt;a href=@FormR@&gt;Check out the form.
&gt; &lt;p .noscript&gt;Your script did not load. :(
&gt; |]
&gt;     addHtmlHead [hamlet|&lt;meta keywords=haskell|]
&gt; 
&gt; handleFormR = do
&gt;     (res, form, enctype, nonce) &lt;- runFormPost $ fieldsToTable $ (,,,,,,,,)
&gt;         &lt;$&gt; stringField "My Field" Nothing
&gt;         &lt;*&gt; stringField "Another field" (Just "some default text")
&gt;         &lt;*&gt; intField "A number field" (Just 5)
&gt;         &lt;*&gt; jqueryDayField def "A day field" Nothing
&gt;         &lt;*&gt; timeField "A time field" Nothing
&gt;         &lt;*&gt; boolField "A checkbox" (Just False)
&gt;         &lt;*&gt; jqueryAutocompleteField AutoCompleteR "Autocomplete" Nothing
&gt;         &lt;*&gt; nicHtmlField "HTML"
&gt;                 (Just $ string "You can put &lt;rich text&gt; here")
&gt;         &lt;*&gt; maybeEmailField "An e-mail addres" Nothing
&gt;     let mhtml = case res of
&gt;                     FormSuccess (_, _, _, _, _, _, _, x, _) -&gt; Just x
&gt;                     _ -&gt; Nothing
&gt;     defaultLayout $ do
&gt;         addCassius [cassius|
&gt; .tooltip
&gt;     color: #666
&gt;     font-style: italic
&gt; textarea.html
&gt;     width: 300px
&gt;     height: 150px|]
&gt;         addWidget [hamlet|
&gt; &lt;form method="post" enctype="#{enctype}"&gt;
&gt;     &lt;table&gt;
&gt;         \^{form}
&gt;         &lt;tr&gt;
&gt;             &lt;td colspan="2"&gt;
&gt;                 \#{nonce}
&gt;                 &lt;input type="submit"&gt;
&gt;     $maybe html &lt;- mhtml
&gt;         \#{html}
&gt; |]
&gt;         setTitle $ string "Form"
&gt; 
&gt; main = warpDebug 3000 $ HW $ static "static"
&gt; 
&gt; getAutoCompleteR :: Handler RepJson
&gt; getAutoCompleteR = do
&gt;     term &lt;- runFormGet' $ stringInput "term"
&gt;     jsonToRepJson $ jsonList
&gt;         [ jsonScalar $ unpack term ++ "foo"
&gt;         , jsonScalar $ unpack term ++ "bar"
&gt;         , jsonScalar $ unpack term ++ "baz"
&gt;         ]
</codeblock></conbody></concept>